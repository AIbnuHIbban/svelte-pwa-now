{
  "version": 3,
  "file": "components.css",
  "sources": [
    "..\\src\\components\\PlaceList.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import {\r\n    currentLat,\r\n    currentLong,\r\n    searchString,\r\n    selectedIndex,\r\n    geoPermissionGranted,\r\n    showModal\r\n  } from \"../store/store.js\";\r\n  import PlaceListItem from \"./PlaceListItem.svelte\";\r\n  import Searchbar from \"./Searchbar.svelte\";\r\n  import { calculateDistance } from \"../util.js\";\r\n  import { onMount, getContext } from \"svelte\";\r\n\r\n  let map, createMarker;\r\n  let toilets;\r\n\r\n  onMount(() => {\r\n    fetch(\"data/toilets.geojson\")\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        toilets = json.features;\r\n      });\r\n\r\n    //Get references to the map and createMarker functions to enable control from this component\r\n    const { getMap, getCreateMarker } = getContext(\"mapContextKey\");\r\n    map = getMap();\r\n    createMarker = getCreateMarker();\r\n\r\n    currentMapCenter = map.getCenter();\r\n    map.on(\"dragend\", e => {\r\n      currentMapCenter = map.getCenter();\r\n    });\r\n  });\r\n\r\n  let filtered = [];\r\n  let currentMapCenter;\r\n\r\n  function receiveKeyPress(event) {\r\n    const key = event.detail.key;\r\n\r\n    if ($selectedIndex < filtered.length - 1 && key === \"ArrowDown\") {\r\n      selectedIndex.update(selectedIndex => selectedIndex + 1);\r\n    } else if ($selectedIndex > 0 && key === \"ArrowUp\") {\r\n      selectedIndex.update(selectedIndex => selectedIndex - 1);\r\n    } else if (filtered.length > 0 && key === \"Enter\") {\r\n      currentLat.set(filtered[$selectedIndex].geometry.coordinates[1]);\r\n      currentLong.set(filtered[$selectedIndex].geometry.coordinates[0]);\r\n      searchString.set(\"\");\r\n      showModal.set(true);\r\n    }\r\n  }\r\n\r\n  $: if ($searchString.length > 0) {\r\n    selectedIndex.set(0);\r\n\r\n    filtered = toilets.filter(\r\n      item =>\r\n        item.properties.name\r\n          .toLowerCase()\r\n          .includes($searchString.toLowerCase()) ||\r\n        item.properties.address\r\n          .toLowerCase()\r\n          .includes($searchString.toLowerCase())\r\n    );\r\n\r\n    let referenceCenter;\r\n    let distance;\r\n    if ($geoPermissionGranted) {\r\n      referenceCenter = { lat: $currentLat, lng: $currentLong };\r\n    } else {\r\n      referenceCenter = currentMapCenter;\r\n    }\r\n\r\n    filtered.forEach(filteredItem => {\r\n      distance = calculateDistance(\r\n        referenceCenter.lat,\r\n        referenceCenter.lng,\r\n        filteredItem.geometry.coordinates[1],\r\n        filteredItem.geometry.coordinates[0],\r\n        \"K\"\r\n      );\r\n      filteredItem.distance = distance;\r\n    });\r\n\r\n    filtered.sort((first, second) => first.distance - second.distance);\r\n  } else {\r\n    selectedIndex.set(0);\r\n    filtered = [];\r\n  }\r\n</script>\r\n\r\n<style>.searchList{max-height:16rem}@media screen and (min-width:768px){.searchList{max-height:32rem}}</style>\r\n\r\n<div class=\"fixed px-2 py-4 w-full lg:w-1/3 z-10\">\r\n  <Searchbar on:keyboard={e => receiveKeyPress(e)}/>\r\n  <div\r\n    class=\"searchList w-full overflow-auto mt-1 rounded-lg bg-backgroundColor shadow\"\r\n  >\r\n    {#each filtered as place, i} <PlaceListItem placeObj={place} key={i}\r\n    selected={$selectedIndex === i ? true : false}/> {/each}\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AA4FO,0BAAW,CAAC,WAAW,KAAK,CAAC,OAAO,MAAM,CAAC,GAAG,CAAC,WAAW,KAAK,CAAC,CAAC,0BAAW,CAAC,WAAW,KAAK,CAAC,CAAC"
}